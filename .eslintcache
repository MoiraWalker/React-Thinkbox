[{"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\index.js":"1","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\reportWebVitals.js":"2","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\App.js":"3","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\context\\authContextProvider\\index.js":"4","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\routing\\routes\\index.js":"5","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\context\\burgerBarContextProvider\\index.js":"6","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\nav\\navbar\\index.js":"7","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\index.js":"8","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\routing\\privateRoute\\index.js":"9","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\routing\\privateRouteAdmin\\index.js":"10","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\nav\\navBurger\\index.js":"11","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\account\\index.js":"12","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\admin\\index.js":"13","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\login\\index.js":"14","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\project\\index.js":"15","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\post\\index.js":"16","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\register\\index.js":"17","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\projects\\index.js":"18","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\nav\\navList\\index.js":"19","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\user\\index.js":"20","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\accountInfo\\index.js":"21","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\thoughtInfo\\index.js":"22","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\projectInfo\\index.js":"23","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\thought\\index.js":"24","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\workInfo\\index.js":"25","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\index.js":"26","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\accountChangePasswordForm\\index.js":"27","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\work\\index.js":"28","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\registerForm\\index.js":"29","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\accountEditForm\\index.js":"30","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\projectAddForm\\index.js":"31","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\loginForm\\index.js":"32","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\button\\index.js":"33","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\selectOption\\index.js":"34","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\postAddForm\\index.js":"35","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\index.js":"36","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\userEditForm\\index.js":"37","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\checkboxInput\\index.js":"38","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\inputField\\index.js":"39","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\thoughtEditForm\\index.js":"40","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\buttonWrapper\\index.js":"41","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\projectEditForm\\index.js":"42","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\textarea\\index.js":"43","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\linkWrapper\\index.js":"44","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\workEditForm\\index.js":"45","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\selectbox\\index.js":"46","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\workAddForm\\index.js":"47","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\thoughtAddForm\\index.js":"48","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\errorMessage\\index.js":"49","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\input\\index.js":"50","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\label\\index.js":"51"},{"size":287,"mtime":1609940074102,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":785,"mtime":1612447323347,"results":"55","hashOfConfig":"53"},{"size":2803,"mtime":1614270339254,"results":"56","hashOfConfig":"53"},{"size":1219,"mtime":1613482334734,"results":"57","hashOfConfig":"53"},{"size":407,"mtime":1610114016302,"results":"58","hashOfConfig":"53"},{"size":397,"mtime":1610118628764,"results":"59","hashOfConfig":"53"},{"size":363,"mtime":1613242740032,"results":"60","hashOfConfig":"53"},{"size":394,"mtime":1612447527776,"results":"61","hashOfConfig":"53"},{"size":522,"mtime":1612726285087,"results":"62","hashOfConfig":"53"},{"size":890,"mtime":1610118559707,"results":"63","hashOfConfig":"53"},{"size":2077,"mtime":1614182558011,"results":"64","hashOfConfig":"53"},{"size":1870,"mtime":1613650582650,"results":"65","hashOfConfig":"53"},{"size":248,"mtime":1612440451545,"results":"66","hashOfConfig":"53"},{"size":5502,"mtime":1614263192580,"results":"67","hashOfConfig":"53"},{"size":1136,"mtime":1613317433187,"results":"68","hashOfConfig":"53"},{"size":262,"mtime":1610462403979,"results":"69","hashOfConfig":"53"},{"size":3412,"mtime":1614285182558,"results":"70","hashOfConfig":"53"},{"size":1284,"mtime":1612727337381,"results":"71","hashOfConfig":"53"},{"size":1948,"mtime":1614161690525,"results":"72","hashOfConfig":"53"},{"size":1414,"mtime":1612800280017,"results":"73","hashOfConfig":"53"},{"size":624,"mtime":1614097512066,"results":"74","hashOfConfig":"53"},{"size":2640,"mtime":1614285510569,"results":"75","hashOfConfig":"53"},{"size":3153,"mtime":1613666019055,"results":"76","hashOfConfig":"53"},{"size":934,"mtime":1613317694062,"results":"77","hashOfConfig":"53"},{"size":326,"mtime":1607521746396,"results":"78","hashOfConfig":"53"},{"size":2502,"mtime":1612611990143,"results":"79","hashOfConfig":"53"},{"size":4282,"mtime":1614262149761,"results":"80","hashOfConfig":"53"},{"size":5593,"mtime":1612634488966,"results":"81","hashOfConfig":"53"},{"size":2823,"mtime":1614180618993,"results":"82","hashOfConfig":"53"},{"size":3211,"mtime":1613661456045,"results":"83","hashOfConfig":"53"},{"size":3309,"mtime":1612634617037,"results":"84","hashOfConfig":"53"},{"size":262,"mtime":1612299796862,"results":"85","hashOfConfig":"53"},{"size":237,"mtime":1613473044545,"results":"86","hashOfConfig":"53"},{"size":2228,"mtime":1613295299043,"results":"87","hashOfConfig":"53"},{"size":288,"mtime":1607459071902,"results":"88","hashOfConfig":"53"},{"size":2994,"mtime":1614181678268,"results":"89","hashOfConfig":"53"},{"size":675,"mtime":1610046942880,"results":"90","hashOfConfig":"53"},{"size":665,"mtime":1612267990620,"results":"91","hashOfConfig":"53"},{"size":2893,"mtime":1613666684900,"results":"92","hashOfConfig":"53"},{"size":171,"mtime":1610462313417,"results":"93","hashOfConfig":"53"},{"size":3132,"mtime":1614161220215,"results":"94","hashOfConfig":"53"},{"size":378,"mtime":1610046942905,"results":"95","hashOfConfig":"53"},{"size":141,"mtime":1610089800186,"results":"96","hashOfConfig":"53"},{"size":3261,"mtime":1613666140861,"results":"97","hashOfConfig":"53"},{"size":549,"mtime":1613472179656,"results":"98","hashOfConfig":"53"},{"size":4752,"mtime":1614331979387,"results":"99","hashOfConfig":"53"},{"size":2693,"mtime":1614262945562,"results":"100","hashOfConfig":"53"},{"size":169,"mtime":1610046942916,"results":"101","hashOfConfig":"53"},{"size":323,"mtime":1611825012398,"results":"102","hashOfConfig":"53"},{"size":223,"mtime":1612268413282,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"cl0lf9",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\index.js",[],["230","231"],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\reportWebVitals.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\App.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\context\\authContextProvider\\index.js",["232"],"import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext({});\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const history = useHistory();\r\n  const [admin, setAdmin ] = useState(false);\r\n  const [authState, setAuthState] = useState({\r\n    status: 'pending',\r\n    error: null,\r\n    user: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    async function getUserInfo() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api/auth/signin', {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n        );\r\n        setAuthState({\r\n          ...authState,\r\n          user: {\r\n            id: response.id,\r\n            username: response.username,\r\n            email: response.email,\r\n          },\r\n          status: 'done',\r\n        });\r\n\r\n      } catch (e) {\r\n        setAuthState({\r\n          ...authState,\r\n          user: null,\r\n          error: e,\r\n          status: 'done'\r\n        });\r\n      }\r\n    }\r\n\r\n    if (authState.user === null && token) {\r\n      getUserInfo();\r\n    } else {\r\n      setAuthState({\r\n        ...authState,\r\n        error: null,\r\n        user: null,\r\n        status: 'done'\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function login(data) {\r\n    localStorage.setItem('token', data.accessToken);\r\n    setAuthState({\r\n      ...authState,\r\n      user: {\r\n        username: data.username,\r\n        email: data.email,\r\n        roles: data.roles,\r\n        id: data.id,\r\n      }\r\n    })\r\n    isAdmin(data.roles);\r\n    console.log(\"USER ID\", data.id);\r\n  }\r\n\r\n  function isAdmin(data){\r\n    if ( data[0].includes(\"ROLE_ADMIN\")) {\r\n      setAdmin(true);\r\n    } else {\r\n      setAdmin(false);\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    setAuthState({\r\n      ...authState,\r\n      user: null,\r\n    })\r\n    setAdmin(false);\r\n    history.push('/login');\r\n  }\r\n\r\n  function getAdmin() {\r\n    return admin;\r\n  }\r\n\r\n  const providerData = {\r\n    ...authState,\r\n    login,\r\n    logout,\r\n    getAdmin,\r\n  };\r\n\r\n  return (\r\n      <AuthContext.Provider value={providerData}>\r\n        {authState.status === 'done' && children}\r\n        {authState.status === 'pending' && <p>Loading...</p>}\r\n      </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useAuthState() {\r\n  const authState = useContext(AuthContext);\r\n  const isDone = authState.status === 'done';\r\n  const isAuthenticated = authState.user !== null && isDone;\r\n\r\n  return {\r\n    ...authState,\r\n    isAuthenticated: isAuthenticated,\r\n  }\r\n}\r\n\r\nexport {\r\n  AuthContext,\r\n  useAuthState,\r\n  AuthContextProvider,\r\n}\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\routing\\routes\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\context\\burgerBarContextProvider\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\nav\\navbar\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\routing\\privateRoute\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\routing\\privateRouteAdmin\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\nav\\navBurger\\index.js",["233"],"import './index.scss';\r\nimport React, { useState } from 'react';\r\nimport { NavList } from \"../navList\";\r\nimport { BurgerBarContext } from \"../../../context/burgerBarContextProvider\";\r\nimport { useContext } from 'react';\r\n\r\nexport const NavBurger = () => {\r\n    const { open, setOpen } = useContext(BurgerBarContext);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"burger\" open={open} onClick={() => setOpen(!open)}>\r\n                <div className={open ? 'burger-bar burger-bar-top--open' : 'burger-bar burger-bar-top--closed' }  ></div>\r\n                <div className={open ? 'burger-bar burger-bar-middle--open' : 'burger-bar burger-bar-middle--closed' }  ></div>\r\n                <div className={open ? 'burger-bar burger-bar-bottom--open' : 'burger-bar burger-bar-bottom--closed' }  ></div>\r\n            </div>\r\n            <NavList open={setOpen} />\r\n        </>\r\n    );\r\n};","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\account\\index.js",["234","235"],"import './index.scss';\r\nimport {useState, useEffect} from \"react\";\r\nimport {AccountEditForm} from \"../../components/forms/organisms/accountEditForm\";\r\nimport {AccountInfo} from \"../../components/accountInfo\";\r\nimport {AccountChangePasswordForm} from \"../../components/forms/organisms/accountChangePasswordForm\";\r\nimport {useAuthState} from \"../../context/authContextProvider\";\r\nimport axios from \"axios\";\r\n\r\nexport const Account = () => {\r\n    const [activeComponent, setActiveComponent] = useState('show');\r\n    const {user} = useAuthState();\r\n    const [isUpdated, setIsUpdated] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (isUpdated) {\r\n            getUser();\r\n            setIsUpdated(null);\r\n        }\r\n    }, [isUpdated])\r\n\r\n    async function getUser() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.put(`http://localhost:8080/api/users/${user.id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const renderActiveComponent = () => {\r\n        const components = {\r\n            show: <AccountInfo username={user.username} email={user.email} setActiveComponent={setActiveComponent}/>,\r\n            edit: <AccountEditForm id={user.id} setIsUpdated={setIsUpdated} username={user.username} email={user.email} setActiveComponent={setActiveComponent}/>,\r\n            password: <AccountChangePasswordForm username={user.username} email={user.email} setActiveComponent={setActiveComponent}/>,\r\n        }\r\n        return components[activeComponent]\r\n    }\r\n\r\n    return (\r\n        <div className='page__wrapper'>\r\n            <div className=\"page__container\">\r\n                <h1 className=\"page__header\">Account</h1>\r\n                <div className=\"account__wrapper\">\r\n                    {renderActiveComponent()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\admin\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\login\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\project\\index.js",["236","237","238","239","240"],"import './index.scss';\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {ThoughtInfo} from \"../../components/posts/thoughtInfo\";\r\nimport {WorkInfo} from \"../../components/posts/workInfo\";\r\nimport {PostAddForm} from \"../../components/forms/organisms/postAddForm\";\r\nimport {Button} from \"../../components/forms/atoms/button\";\r\nimport {SelectBox} from \"../../components/forms/molecules\";\r\nimport {SelectOption} from \"../../components/forms/atoms/selectOption\";\r\n\r\nexport const Project = () => {\r\n    const {id} = useParams();\r\n    const [project, setProject] = useState(\"\");\r\n    const [thoughts, setThoughts] = useState(\"\");\r\n    const [works, setWorks] = useState(\"\");\r\n    const [addPost, setAddPost] = useState(false);\r\n    const [posts, setPosts] = useState(\"\");\r\n    const [selectedType, setSelectedType] = useState(\"all\");\r\n\r\n    useEffect(() => {\r\n        getProject();\r\n        getAllThoughts();\r\n        getAllWorks();\r\n        getAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAllThoughts();\r\n    }, [addPost])\r\n\r\n    useEffect(() => {\r\n        getAllPosts();\r\n    }, [addPost]);\r\n\r\n\r\n    async function getProject() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:8080/api/projects/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setProject(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function getAllPosts() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:8080/api/posts/project/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setPosts(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function getAllThoughts() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:8080/api/posts/thoughts/project/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setThoughts(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    async function getAllWorks() {\r\n        try {\r\n            const result = await axios.get(`http://localhost:8080/api/posts/works`);\r\n            setWorks(result.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const addPostForm = () => {\r\n        setAddPost(true);\r\n    }\r\n\r\n    const renderPost = (post) => {\r\n        if (post.type === \"THOUGHT\" && selectedType === \"thought\") {\r\n            return <ThoughtInfo id={post.id} title={post.title} description={post.description}></ThoughtInfo>\r\n        } else if (post.type === \"WORK\" && selectedType === \"work\") {\r\n            return <WorkInfo id={post.id} title={post.title} description={post.description} link={post.link}></WorkInfo>\r\n        } else if (post && selectedType === \"all\") {\r\n            if (post.type === \"THOUGHT\") {\r\n                return <ThoughtInfo id={post.id} title={post.title} description={post.description}></ThoughtInfo>\r\n            } else if (post.type === \"WORK\") {\r\n                return <WorkInfo id={post.id} title={post.title} description={post.description}\r\n                                 link={post.link}></WorkInfo>\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (event) => {\r\n        setSelectedType(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='page__wrapper'>\r\n            {addPost ?\r\n                (<PostAddForm setAddPost={setAddPost}></PostAddForm>)\r\n                :\r\n                (<div className=\"page__container\">\r\n                    <div className=\"page__heading\">\r\n                        <h1 className=\"page__header\">{project.title}</h1>\r\n                        <div className=\"project__buttons\">\r\n                            <form>\r\n                                <SelectBox\r\n                                    className=\"select__type\"\r\n                                    onChange={handleSelectChange}\r\n                                    value={selectedType}>\r\n                                    <SelectOption name=\"postType\" value=\"all\">All</SelectOption>\r\n                                    <SelectOption name=\"postType\" value=\"thought\">Thought</SelectOption>\r\n                                    <SelectOption name=\"postType\" value=\"work\">Work</SelectOption>\r\n                                </SelectBox>\r\n                            </form>\r\n                            <Button onClick={addPostForm}>Add post</Button>\r\n                        </div>\r\n                    </div>\r\n                    {posts &&\r\n                    <div className=\"page__items\">\r\n                        {posts.map((post) => {\r\n                            return renderPost(post);\r\n                        })}\r\n                    </div>\r\n                    }\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\post\\index.js",["241"],"import './index.scss';\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Thought} from \"../../components/posts/thought\";\r\nimport { Work} from \"../../components/posts/work\";\r\n\r\nexport const Post = () => {\r\n    const {id} = useParams();\r\n    const [post, setPost] = useState(\"\");\r\n\r\n    async function getPost() {\r\n        try {\r\n            const result = await axios.get(`http://localhost:8080/api/posts/${id}`);\r\n            setPost(result.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getPost();\r\n    },[])\r\n\r\n\r\n    const getPostType = () => {\r\n        if (post.type === \"WORK\") {\r\n            return <Work title={post.title} description={post.description}></Work>\r\n        } else if (post.type === \"THOUGHT\") {\r\n            return <Thought title={post.title} description={post.description}></Thought>\r\n        }\r\n    }\r\n\r\n\r\n    console.log(post);\r\n\r\n    return (\r\n        <div className=\"page__container page__center\">\r\n            {getPostType()}\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\register\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\pages\\projects\\index.js",["242","243","244"],"import './index.scss';\r\nimport { ProjectInfo } from \"../../components/projectInfo\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"../../components/forms/atoms/button\";\r\nimport axios from \"axios\";\r\nimport { ProjectAddForm } from \"../../components/forms/organisms/projectAddForm\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const Projects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [isUpdated, setIsUpdated] = useState(null);\r\n    const [isDeleted, setIsDeleted] = useState(null);\r\n    const [addProject, setAddProject] = useState(false);\r\n    const [newProject, setNewProject ] = useState(false);\r\n    const { Register, handleSubmit, register } = useForm();\r\n\r\n    useEffect(() => {\r\n        getAllProjects();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isDeleted) {\r\n            getAllProjects();\r\n            setIsDeleted(null);\r\n        }\r\n    }, [isDeleted])\r\n\r\n    useEffect(() => {\r\n        if (isUpdated) {\r\n            getAllProjects();\r\n            setIsUpdated(null);\r\n        }\r\n    }, [isUpdated])\r\n\r\n    useEffect(() => {\r\n        if (newProject) {\r\n            getAllProjects();\r\n            setNewProject(false);\r\n        }\r\n    }, [newProject])\r\n\r\n    console.log(\"isdeleted\", isDeleted);\r\n\r\n    async function getAllProjects() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get('http://localhost:8080/api/projects', {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setProjects(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\nconst addProjectForm = () => {\r\n        setAddProject(true);\r\n    }\r\n\r\n    return (\r\n        <div className='page__wrapper'>\r\n            {addProject ?\r\n                (<ProjectAddForm setAddProject={setAddProject} setNewProject={setNewProject}/> )\r\n                :\r\n                (<div className=\"page__container\">\r\n                        <div className=\"page__heading\">\r\n                            <h1 className=\"page__header\">Projects</h1>\r\n                            <Button onClick={addProjectForm}>Add project</Button>\r\n                        </div>\r\n                        {projects &&\r\n                        <div className='page__items'>\r\n                            {\r\n                                projects.map((project) => {\r\n                                    return <ProjectInfo id={project.id}\r\n                                                        title={project.title}\r\n                                                        privateView={project.privateView}\r\n                                                        setIsDeleted={setIsDeleted}\r\n                                                        setIsUpdated={setIsUpdated}/>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n\r\n            {/*<form onSubmit={handleSubmit(uploadFile)}>*/}\r\n            {/*    <input ref={register} id=\"fileupload\" type=\"file\" name=\"fileupload\" />*/}\r\n            {/*    <button id=\"upload-button\" onClick={uploadFile}>upload file</button>*/}\r\n            {/*</form>*/}\r\n\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\nav\\navList\\index.js",["245"],"import './index.scss';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BurgerBarContext } from \"../../../context/burgerBarContextProvider\";\r\nimport { useContext } from 'react';\r\nimport { AuthContext, useAuthState } from \"../../../context/authContextProvider\";\r\n\r\nexport const NavList = () => {\r\n    const {getAdmin} = useContext(AuthContext);\r\n    const {isAuthenticated} = useAuthState();\r\n    const { open, setOpen } = useContext(BurgerBarContext);\r\n    const { user } = useAuthState();\r\n\r\n    return(\r\n        <ul className={open ? 'nav-list nav-list--open' : 'nav-list nav-list--closed'} >\r\n            <li>{ getAdmin() &&  <NavLink to=\"/admin\" exact activeClassName=\"nav-link--active\" className=\"nav-link nav-link__padding nav-link--is-authorised\">Admin</NavLink>}</li>\r\n            <li>{ isAuthenticated &&  <NavLink to=\"/\" exact activeClassName=\"nav-link--active\" className=\"nav-link nav-link__padding\">Projects</NavLink>}</li>\r\n            <li>{ isAuthenticated && <NavLink to=\"/account\" exact activeClassName=\"nav-link--active\" className=\"nav-link nav-link__padding\">{user.username}</NavLink>}</li>\r\n            <li><NavLink to=\"/account\" exact activeClassName=\"nav-link--active\" className=\"nav-link nav-link__logout\">Logout</NavLink></li>\r\n        </ul>\r\n    );\r\n};\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\user\\index.js",["246"],"import './index.scss';\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { UserEditForm } from \"../forms/organisms/userEditForm\";\r\nimport { ReactComponent as Delete } from '../../assets/images/delete.svg';\r\nimport { ReactComponent as Edit } from '../../assets/images/edit.svg';\r\n\r\nexport const User = ({ id, email, setIsDeleted, setIsUpdated, username  })  => {\r\n    const [ edit, toggleEdit ] = useState(false);\r\n\r\n    async function deleteUser(id) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.delete(`http://localhost:8080/api/users/${id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setIsDeleted(id);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const editUser = () => {\r\n        toggleEdit(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"user__card\">\r\n            { edit ? (\r\n             <UserEditForm id={id}  username={username} email={email} setIsUpdated={setIsUpdated} toggleEdit={toggleEdit}/>\r\n            ) : (\r\n                <div className=\"user__background\">\r\n                    <div className=\"user__header\">\r\n                        <h2>{username}</h2>\r\n                        <div className=\"user__button-wrapper\">\r\n                            <button className=\"button__icon\" onClick={() => deleteUser(id)}>\r\n                                <Delete/>\r\n                            </button>\r\n                            <button className=\"button__icon\" onClick={editUser}>\r\n                                <Edit/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <p>{email}</p>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\accountInfo\\index.js",["247"],"import './index.scss';\r\nimport React, {useContext} from 'react';\r\nimport {Button} from \"../forms/atoms/button\";\r\nimport {AuthContext, useAuthState} from \"../../context/authContextProvider\";\r\n\r\n\r\nexport const AccountInfo = ({setActiveComponent, username, email}) => {\r\n    const {logout} = useContext(AuthContext);\r\n\r\n    const editUser = () => {\r\n        setActiveComponent('edit');\r\n    }\r\n\r\n    const changePassword = () => {\r\n        setActiveComponent('password');\r\n    }\r\n\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account__data\">\r\n                <div className=\"account__item\">\r\n                    <p className=\"account__label\">Username</p>\r\n                    <p className=\"account__info\">{username}</p>\r\n                </div>\r\n                <div className=\"account__item\">\r\n                    <p className=\"account__label\">Email</p>\r\n                    <p className=\"account__info\">{email}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"account__edit-wrapper\">\r\n                <div className=\"account__edit\" onClick={editUser}>Edit account</div>\r\n                <div className=\"account__edit\" onClick={changePassword}>Change password</div>\r\n            </div>\r\n            <Button type='button' onClick={() => logout()} className=\"button button__primary account__button-wrapper\">Log out</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\thoughtInfo\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\projectInfo\\index.js",["248","249"],"import './index.scss';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {ReactComponent as Delete} from \"../../assets/images/delete.svg\";\r\nimport {ReactComponent as Edit} from \"../../assets/images/edit.svg\";\r\nimport axios from \"axios\";\r\nimport {ProjectEditForm} from \"../forms/organisms/projectEditForm\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button} from \"../forms/atoms/button\";\r\n\r\nexport const ProjectInfo = ({id, setIsDeleted, title, privateView, setIsUpdated}) => {\r\n    const [edit, toggleEdit] = useState(false);\r\n    const [access, setAccess] = useState(\"Private\");\r\n    const history = useHistory();\r\n\r\n    async function deleteProject(id) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.delete(`http://localhost:8080/api/projects/${id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setIsDeleted(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (privateView === false) {\r\n            setAccess('Private');\r\n        } else {\r\n            setAccess('Public');\r\n        }\r\n    }, [setAccess])\r\n\r\n    const editProject = () => {\r\n        toggleEdit(true);\r\n    }\r\n\r\n    const toProject = () => {\r\n        history.push(`/project${id}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"project__card\">\r\n            {edit ? (\r\n                <ProjectEditForm title={title} id={id} toggleEdit={toggleEdit} setIsUpdated={setIsUpdated}\r\n                                 setAccess={setAccess}/>\r\n            ) : (\r\n                <div>\r\n                    <div className=\"project__align\">\r\n                        <h2>{title}</h2>\r\n                        <div className=\"project__button-wrapper\">\r\n                            <button className=\"button__icon\" onClick={() => deleteProject(id)}>\r\n                                <Delete/>\r\n                            </button>\r\n                            <button className=\"button__icon\" onClick={editProject}>\r\n                                <Edit/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"project__align\">\r\n                        <p className=\"access\">{access}</p>\r\n                        <Button className=\"button button__tertairy\" onClick={toProject}>Go to project</Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\thought\\index.js",["250","251"],"import React from 'react';\r\nimport './index.scss';\r\nimport close from '../../../assets/images/close.svg';\r\nimport {ReactComponent as Delete} from \"../../../assets/images/delete.svg\";\r\nimport {ReactComponent as Edit} from \"../../../assets/images/edit.svg\";\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {ThoughtEditForm} from \"../../forms/organisms/thoughtEditForm\";\r\n\r\nexport const Thought = () => {\r\n    const {id} = useParams();\r\n    const [edit, toggleEdit] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [thought, setThought] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n            getThought();\r\n            setIsUpdated(false);\r\n    }, [isUpdated])\r\n\r\n    async function getThought() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:8080/api/posts/thoughts/${id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setThought(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function deleteThought(id) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.delete(`http://localhost:8080/api/posts/thoughts/${id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            back();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const editThought = () => {\r\n        toggleEdit(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {edit ?\r\n                (<ThoughtEditForm id={id} setIsUpdated={setIsUpdated} toggleEdit={toggleEdit} title={thought.title} description={thought.description}></ThoughtEditForm>)\r\n                :\r\n                (<div className=\"post__card thought\">\r\n                    <div className=\"thought__top\">\r\n                        <div className=\"post__header\">\r\n                            <p className=\"post__title\">{thought.title}</p>\r\n                            <img onClick={back} src={close} alt=\"close\" className=\"close\"/>\r\n                        </div>\r\n                        <p className=\"post__des\">{thought.description}</p>\r\n                    </div>\r\n                    <div className=\"post__footer\">\r\n                        <p className=\"post__label\">Thought</p>\r\n                        <div className=\"post__buttons\">\r\n                            <Delete className=\"button__icon\" onClick={() => deleteThought(id)}/>\r\n                            <Edit className=\"button__icon\" onClick={editThought}/>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\workInfo\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\accountChangePasswordForm\\index.js",["252"],"import React from 'react';\r\nimport { ButtonWrapper, InputField } from \"../../molecules\";\r\nimport { Button } from '../../atoms';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const AccountChangePasswordForm = ({ setActiveComponent, id }) => {\r\n    const { register, unregister, watch, reset, handleSubmit,  ...methods } = useForm({\r\n        mode: 'onChange'\r\n    });\r\n\r\n    const onError = (errorList) => {\r\n        console.log(errorList)\r\n    }\r\n\r\n    async function updateAccount(data) {\r\n        try {\r\n            const result = await axios.put(`http://localhost:8080/clients/${id}`, data);\r\n            setActiveComponent(false);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setActiveComponent('show');\r\n    }\r\n\r\n    return (\r\n     <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n         <form onSubmit={handleSubmit(updateAccount, onError)}>\r\n             <div className='form-item'>\r\n                 <InputField\r\n                     className=\"label--light\"\r\n                     name=\"password\"\r\n                     label=\"Password\"\r\n                     type=\"password\"\r\n                     fieldRef={register({\r\n                         required: {\r\n                             value: true,\r\n                             message: 'password is required',\r\n                         }\r\n                     })}\r\n                 />\r\n             </div>\r\n                 <div className='form-item'>\r\n                     <InputField\r\n                         className=\"label--light\"\r\n                         name=\"repeat-password\"\r\n                         label=\"Repeat password\"\r\n                         type=\"password\"\r\n                         fieldRef={register({\r\n                             required: {\r\n                                 value: true,\r\n                                 message: 'Email name is required',\r\n                             },\r\n                         })}\r\n                     />\r\n                 </div>\r\n             <ButtonWrapper>\r\n                 <Button onClick={updateAccount} className=\"button button__primary button__margin-right\">Save Changes</Button>\r\n                 <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n             </ButtonWrapper>\r\n         </form>\r\n     </FormProvider>\r\n );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\posts\\work\\index.js",["253","254","255","256"],"import React from 'react';\r\nimport './index.scss';\r\nimport close from '../../../assets/images/close.svg';\r\nimport {ReactComponent as Delete} from \"../../../assets/images/delete.svg\";\r\nimport {ReactComponent as Edit} from \"../../../assets/images/edit.svg\";\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {WorkEditForm} from \"../../forms/organisms/workEditForm\";\r\nimport {ExternalLink} from \"react-external-link\";\r\n\r\nexport const Work = () => {\r\n    // const { isAuthenticated } = useAuthState();\r\n    const {id} = useParams();\r\n    const [edit, toggleEdit] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [work, setWork] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const back = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWork();\r\n        getImage(fileName);\r\n    }, [isUpdated]);\r\n\r\n    useEffect(() => {\r\n        getImage(fileName);\r\n    }, []);\r\n\r\n    async function getWork() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:8080/api/posts/works/${id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setWork(response.data);\r\n            setFileName(response.data.fileName);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function getImage(fileName) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:8080/api/uploads/${fileName}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setImage(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function deleteWork(id) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.delete(`http://localhost:8080/api/posts/works/${id}`,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            }\r\n            );\r\n           back();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const editWork = () => {\r\n        toggleEdit(true);\r\n    }\r\n\r\n    const toggleUpdateWork = () => {\r\n        setIsUpdated(true);\r\n    }\r\n\r\n    const onLink = (work) => {\r\n        if ( work.link === \"\" ) {\r\n            return null\r\n        } else {\r\n            return <ExternalLink href={`https://${work.link}`} />;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {edit ?\r\n                (<WorkEditForm id={id} toggleUpdateWork={toggleUpdateWork} toggleEdit={toggleEdit} title={work.title} description={work.description}></WorkEditForm>)\r\n                :\r\n                (<div className=\"post__card work\">\r\n                    <div className=\"thought__top\">\r\n                        <div className=\"post__header\">\r\n                            <p className=\"post__title\">{work.title}</p>\r\n                            <img onClick={back} src={close} alt=\"close\" className=\"close\"/>\r\n                        </div>\r\n                        <p className=\"post__des\">{work.description}</p>\r\n                        {onLink(work)}\r\n                        <img src={image} alt=\"image\"/>\r\n                    </div>\r\n                    <div className=\"post__footer\">\r\n                        <p className=\"post__label\">Work</p>\r\n                        <div className=\"post__buttons\">\r\n                            <Delete className=\"button__icon\" onClick={() => deleteWork(id)}/>\r\n                            <Edit className=\"button__icon\" onClick={editWork}/>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\registerForm\\index.js",["257"],"import React from 'react';\r\nimport { ButtonWrapper, InputField } from \"../../molecules\";\r\nimport { Button } from '../../atoms';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LinkWrapper } from \"../../molecules/linkWrapper\";\r\n\r\nexport const RegisterForm = () => {\r\n    const {register, unregister, handleSubmit, ...methods} = useForm({\r\n        mode: 'onChange'\r\n    });\r\n    const [createUserSuccess, setCreateUserSuccess] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    async function onSubmit(data) {\r\n        setError('');\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/auth/signup', data);\r\n            if (response.status === 200) {\r\n                setCreateUserSuccess(true);\r\n            }\r\n        } catch (e) {\r\n            if (e.message.includes('400')) {\r\n                setError('Username and or email adress are already in use');\r\n            } else {\r\n                setError('Something went wrong, please try again');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {createUserSuccess ? (\r\n                <div className=\"success__wrapper\">\r\n                    <h2>Account registered succesfully! 🥳</h2>\r\n                    <p className=\"success__message\">Click\r\n                        <NavLink className=\"success__message link\" activeClassName=\"link--active\" to=\"/login\">here</NavLink>to log in</p>\r\n                </div>\r\n            ) : (\r\n                <FormProvider {...methods} register={register} handleSubmit={handleSubmit}>\r\n                    <div>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <div className=\"form-wrapper\">\r\n                                <h2>Register</h2>\r\n                                <div className='form-item'>\r\n                                    <InputField\r\n                                        name=\"username\"\r\n                                        label=\"Username\"\r\n                                        type=\"text\"\r\n                                        fieldRef={register({\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: 'First name is required',\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                <div className='form-item'>\r\n                                    <InputField\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        type=\"text\"\r\n                                        fieldRef={register({\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: 'Email name is required',\r\n                                            },\r\n                                            pattern: {\r\n                                                value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                                                message: 'The given email adress is not valid'\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                <div className='form-item'>\r\n                                    <InputField\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        fieldRef={register({\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: 'Password name is required',\r\n                                            },\r\n                                            pattern: {\r\n                                                // value: /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{8}$/,\r\n                                                value: true,\r\n                                                message: 'Password is not strong enough. Password should contain, special character, capital letter, number and have a minimum length of 8 characters.'\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                {error && <p className=\"error-message\">{error}</p>}\r\n                                <ButtonWrapper>\r\n                                    <Button>Create account</Button>\r\n                                </ButtonWrapper>\r\n                            <LinkWrapper>\r\n                                <p>Already have an account? Click\r\n                                    <NavLink to=\"/login\" className=\"link\">here</NavLink>\r\n                                    to login.\r\n                                </p>\r\n                            </LinkWrapper>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </FormProvider>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\accountEditForm\\index.js",["258"],"import React from 'react';\r\nimport { ButtonWrapper, InputField } from \"../../molecules\";\r\nimport { Button } from '../../atoms';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const AccountEditForm = ({ setIsUpdated, setActiveComponent, username, email, id  }) => {\r\n    const { register, unregister, watch, reset, handleSubmit,  ...methods } = useForm({\r\n        defaultValues: { username: username, email: email},\r\n        mode: 'onChange'\r\n    });\r\n\r\n    async function updateAccount(data) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.put(`http://localhost:8080/api/users/${id}`, data ,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setActiveComponent('show');\r\n            setIsUpdated(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setActiveComponent('show');\r\n    }\r\n\r\n    const onError = (errorList) => {\r\n        console.log(errorList)\r\n    }\r\n\r\n    return (\r\n     <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n         <form onSubmit={handleSubmit(updateAccount, onError)}>\r\n             <div className='form-item'>\r\n                 <InputField\r\n                     className=\"label--light\"\r\n                     name=\"username\"\r\n                     label=\"User name\"\r\n                     type=\"text\"\r\n                     fieldRef={register({\r\n                         required: {\r\n                             value: true,\r\n                             message: 'First name is required',\r\n                         }\r\n                     })}\r\n                 />\r\n             </div>\r\n                 <div className='form-item'>\r\n                     <InputField\r\n                         className=\"label--light\"\r\n                         name=\"email\"\r\n                         label=\"Email\"\r\n                         type=\"text\"\r\n                         fieldRef={register({\r\n                             required: {\r\n                                 value: true,\r\n                                 message: 'Email name is required',\r\n                             },\r\n                         })}\r\n                     />\r\n                 </div>\r\n             <ButtonWrapper>\r\n                 <Button onClick={updateAccount} className=\"button button__primary button__margin-right\">Save Changes</Button>\r\n                 <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n             </ButtonWrapper>\r\n         </form>\r\n     </FormProvider>\r\n );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\projectAddForm\\index.js",["259","260","261"],"import React, {useEffect, useState} from 'react';\r\nimport {ButtonWrapper, InputField, SelectBox} from \"../../molecules\";\r\nimport {Button, SelectOption} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const ProjectAddForm = ({setAddProject, setNewProject}) => {\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        mode: 'onChange'\r\n    });\r\n\r\n    async function addProject(data) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.post('http://localhost:8080/api/projects', data,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n           setNewProject(true);\r\n           setAddProject(false);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setAddProject(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"page__center\">\r\n            <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n                <form onSubmit={handleSubmit(addProject)}>\r\n                    <div className=\"form-wrapper\">\r\n                        <h2>Add project</h2>\r\n                        <div className='form-item'>\r\n                            <InputField\r\n                                name=\"title\"\r\n                                label=\"Project title\"\r\n                                type=\"text\"\r\n                                fieldRef={register({\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Title name is required',\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n                        <div className='form-item'>\r\n                            <SelectBox\r\n                                name=\"privateView\"\r\n                                label=\"Accessability\"\r\n                                id=\"access\"\r\n                                fieldRef={register({\r\n                                    required: {\r\n                                        value: true\r\n                                    }\r\n                                })}\r\n                            >\r\n                                <SelectOption name=\"pets\" value={false}>Private</SelectOption>\r\n                                <SelectOption name=\"pets\" value={true}>Public</SelectOption>\r\n                            </SelectBox>\r\n                        </div>\r\n                        <ButtonWrapper>\r\n                            <Button onClick={addProject} className=\"button button__primary button__margin-right\">Save</Button>\r\n                            <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n                        </ButtonWrapper>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\loginForm\\index.js",["262"],"import React from 'react';\r\nimport { ButtonWrapper, InputField } from \"../../molecules\";\r\nimport { Button } from '../../atoms';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport './index.scss';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LinkWrapper } from \"../../molecules/linkWrapper\";\r\nimport { AuthContext, useAuthState } from \"../../../../context/authContextProvider\";\r\nimport axios from 'axios';\r\n\r\nexport const LoginForm = () => {\r\n    const {register, handleSubmit, ...methods} = useForm({mode: 'onChange'});\r\n    const {login} = useContext(AuthContext);\r\n    const {isAuthenticated} = useAuthState();\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated === true) {\r\n            history.push('/home');\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    async function onSubmit(data) {\r\n        setError('');\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\r\n                username: data.userName,\r\n                password: data.password,\r\n            })\r\n            login(response.data);\r\n        } catch (e) {\r\n            setError('Login credentials invalid, please try again');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods} register={register} handleSubmit={handleSubmit}>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-wrapper\">\r\n                    <h2>Login</h2>\r\n                    <div className='form-item'>\r\n                        <InputField\r\n                            name=\"userName\"\r\n                            label=\"User name\"\r\n                            type=\"text\"\r\n                            fieldRef={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'User name is required',\r\n                                }\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <InputField\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            fieldRef={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Password is required',\r\n                                }\r\n                            })}\r\n                        >\r\n                        </InputField>\r\n                    </div>\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n                    <ButtonWrapper>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </ButtonWrapper>\r\n                    <LinkWrapper>\r\n                        <p>Click\r\n                            <NavLink to=\"/register\" exact className=\"link\">here</NavLink>\r\n                            to create an account\r\n                        </p>\r\n                    </LinkWrapper>\r\n                </div>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\button\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\selectOption\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\postAddForm\\index.js",["263"],"import React from 'react';\r\nimport {SelectBox} from \"../../molecules\";\r\nimport {SelectOption} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport {useState, useEffect} from 'react';\r\nimport './index.scss';\r\nimport {ThoughtAddForm} from \"../thoughtAddForm\";\r\nimport {WorkAddForm} from \"../workAddForm\";\r\n\r\nexport const PostAddForm = ({setAddPost}) => {\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        mode: 'onChange'\r\n    });\r\n    const [cancel, setCancel] = useState();\r\n    const [selectedType, setSelectedType] = useState(\"thought\");\r\n\r\n\r\n    const addPost = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cancel === true) {\r\n            setAddPost(false);\r\n        }\r\n    }, [cancel]);\r\n\r\n\r\n    const handleSelectChange = (event) => {\r\n        setSelectedType(event.target.value);\r\n    }\r\n\r\n\r\n    const renderActiveForm = () => {\r\n        if (selectedType === \"work\") {\r\n            return <WorkAddForm setCancel={setCancel} setAddPost={setAddPost}></WorkAddForm>\r\n        } else if (selectedType === \"thought\") {\r\n            return <ThoughtAddForm setCancel={setCancel} setAddPost={setAddPost}></ThoughtAddForm>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page__center\">\r\n            <div className=\"form-wrapper\">\r\n            <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n                <form onSubmit={handleSubmit(addPost)}>\r\n                        <h2>Add post</h2>\r\n                        <div className='form-item'>\r\n                            <SelectBox\r\n                                label=\"Post type\"\r\n                                onChange={handleSelectChange}\r\n                                value={selectedType}>\r\n                                <SelectOption name=\"postType\" value=\"thought\">Thought</SelectOption>\r\n                                <SelectOption name=\"postType\" value=\"work\">Work</SelectOption>\r\n                            </SelectBox>\r\n                        </div>\r\n\r\n                </form>\r\n            </FormProvider>\r\n            {renderActiveForm()}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\userEditForm\\index.js",["264"],"import React from 'react';\r\nimport {ButtonWrapper, InputField} from \"../../molecules\";\r\nimport {Button} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const UserEditForm = ({id, email, username, setIsUpdated, toggleEdit}) => {\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        defaultValues: {username: username, email: email},\r\n        mode: 'onChange'\r\n    });\r\n\r\n    const onError = (errorList) => {\r\n        console.log(errorList)\r\n    }\r\n\r\n    async function updateUser(data) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.put(`http://localhost:8080/api/users/${id}`, data ,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setIsUpdated(true);\r\n            toggleEdit(false);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    const onCancel = () => {\r\n        toggleEdit(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"user__background--edit\">\r\n            <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n                <form onSubmit={handleSubmit(updateUser, onError)}>\r\n                    <h2>Edit user</h2>\r\n                    <div className='form-item'>\r\n                        <InputField\r\n                            name=\"username\"\r\n                            label=\"User name\"\r\n                            type=\"text\"\r\n                            fieldRef={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'User name is required',\r\n                                }\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <InputField\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"text\"\r\n                            fieldRef={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Email name is required',\r\n                                },\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <ButtonWrapper>\r\n                        <Button onClick={updateUser}\r\n                                className=\"button button__primary button__margin-right\">Save</Button>\r\n                        <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n                    </ButtonWrapper>\r\n                </form>\r\n            </FormProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\checkboxInput\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\inputField\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\thoughtEditForm\\index.js",["265","266","267","268"],"import React from 'react';\r\nimport {ButtonWrapper, InputField, SelectBox} from \"../../molecules\";\r\nimport {Button, SelectOption} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport {useState} from 'react';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const ThoughtEditForm = ({id, toggleEdit, title, description, setIsUpdated}) => {\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        defaultValues: {title: title, description: description},\r\n        mode: 'onChange'\r\n    });\r\n\r\n    const onCancel = () => {\r\n        toggleEdit(false);\r\n    }\r\n\r\n    async function updateThought(data) {\r\n        try {\r\n            const formData = {...data, type:\"THOUGHT\"}\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.put(`http://localhost:8080/api/posts/thoughts/${id}`, formData,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setIsUpdated(true);\r\n            toggleEdit(false);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n            <form onSubmit={handleSubmit(updateThought)}>\r\n                <div className=\"form-wrapper\">\r\n                <div className='form-item'>\r\n                    <h2>Edit Thought</h2>\r\n                    <InputField\r\n                        name=\"title\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        fieldRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Title is required',\r\n                            }\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <InputField\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        fieldRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Description is required',\r\n                            }\r\n                        })}\r\n                    />\r\n                </div>\r\n                <ButtonWrapper>\r\n                    <Button onClick={updateThought} className=\"button button__primary button__margin-right\">Save</Button>\r\n                    <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n                </ButtonWrapper>\r\n                </div>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\buttonWrapper\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\projectEditForm\\index.js",["269"],"import React from 'react';\r\nimport {ButtonWrapper, InputField} from \"../../molecules\";\r\nimport {Button} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport {SelectBox} from \"../../molecules\";\r\nimport {SelectOption} from \"../../atoms\";\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const ProjectEditForm = ({id, title, toggleEdit, setIsUpdated, setAccess}) => {\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        defaultValues: {title: title},\r\n        mode: 'onChange'\r\n    });\r\n\r\n    const onError = (errorList) => {\r\n        console.log(errorList)\r\n    }\r\n\r\n    async function updateProject(data) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.put(`http://localhost:8080/api/projects/${id}`, data,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setIsUpdated(true);\r\n            toggleEdit(false);\r\n            setAccess(data.access);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        toggleEdit(false);\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n            <form onSubmit={handleSubmit(updateProject, onError)}>\r\n                <h2>Edit project</h2>\r\n                <div className='form-item'>\r\n                    <InputField\r\n                        name=\"title\"\r\n                        label=\"Project title\"\r\n                        type=\"text\"\r\n                        fieldRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Title name is required',\r\n                            }\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <SelectBox\r\n                        name=\"access\"\r\n                        label=\"Accessability\"\r\n                        id=\"access\"\r\n                        fieldRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Title name is required',\r\n                            }\r\n                        })}\r\n\r\n                    >\r\n                        <SelectOption name=\"private\" value=\"Private\">Private</SelectOption>\r\n                        <SelectOption name=\"public\" value=\"Public\">Public</SelectOption>\r\n                    </SelectBox>\r\n                </div>\r\n                <ButtonWrapper>\r\n                    <Button onClick={updateProject}\r\n                            className=\"button button__primary button__margin-right\">Save</Button>\r\n                    <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n                </ButtonWrapper>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\textarea\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\linkWrapper\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\workEditForm\\index.js",["270"],"import React from 'react';\r\nimport {ButtonWrapper, InputField} from \"../../molecules\";\r\nimport {Button} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\n\r\nexport const WorkEditForm = ({id, toggleEdit, title, description, toggleUpdateWork}) => {\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        defaultValues: {title: title, description: description},\r\n        mode: 'onChange'\r\n    });\r\n\r\n    const onCancel = () => {\r\n        toggleEdit(false);\r\n    }\r\n\r\n    async function updateWork(data) {\r\n        try {\r\n            const formData = {...data, type:\"WORK\"}\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.put(`http://localhost:8080/api/posts/works/${id}`, formData,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            toggleUpdateWork(true);\r\n            toggleEdit(false);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n            <form onSubmit={handleSubmit(updateWork)}>\r\n                <div className=\"form-wrapper\">\r\n                    <div className='form-item'>\r\n                        <h2>Edit Work</h2>\r\n                        <InputField\r\n                            name=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            fieldRef={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Title is required',\r\n                                }\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <InputField\r\n                            name=\"description\"\r\n                            label=\"Description\"\r\n                            type=\"text\"\r\n                            fieldRef={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Description is required',\r\n                                }\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <InputField\r\n                            name=\"link\"\r\n                            label=\"Link\"\r\n                            type=\"text\"\r\n                            fieldRef={register}\r\n                        />\r\n                    </div>\r\n                    <ButtonWrapper>\r\n                        <Button onClick={updateWork} className=\"button button__primary button__margin-right\">Save</Button>\r\n                        <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n                    </ButtonWrapper>\r\n                </div>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\molecules\\selectbox\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\workAddForm\\index.js",["271","272","273","274","275"],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\organisms\\thoughtAddForm\\index.js",["276","277"],"import React from 'react';\r\nimport {ButtonWrapper, InputField} from \"../../molecules\";\r\nimport {Button, SelectOption} from '../../atoms';\r\nimport {useForm, FormProvider} from 'react-hook-form';\r\nimport './index.scss';\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const ThoughtAddForm = ({setCancel, setAddPost}) => {\r\n    const {id} = useParams();\r\n    const {register, unregister, watch, reset, handleSubmit, ...methods} = useForm({\r\n        mode: 'onChange'\r\n    });\r\n\r\n    async function addThought(data) {\r\n        try {\r\n            const formData = {...data, type:\"THOUGHT\", currentProjectId: id};\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.post(`http://localhost:8080/api/posts/thoughts`, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n            setAddPost(false);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setCancel(true);\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods} register={register} watch={watch} handleSubmit={handleSubmit}>\r\n            <form onSubmit={handleSubmit(addThought)}>\r\n                <div className='form-item'>\r\n                    <InputField\r\n                        name=\"title\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        fieldRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Title is required',\r\n                            }\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <InputField\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        fieldRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Description is required',\r\n                            }\r\n                        })}\r\n                    />\r\n                </div>\r\n                <ButtonWrapper>\r\n                    <Button onClick={addThought} className=\"button button__primary button__margin-right\">Save</Button>\r\n                    <Button type=\"button\" className=\"button button__secondary\" onClick={onCancel}>Cancel</Button>\r\n                </ButtonWrapper>\r\n\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\errorMessage\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\input\\index.js",[],"C:\\Users\\moira\\OneDrive\\Documenten\\Novi\\Eindopdracht\\Frontend\\react-eindopdracht\\src\\components\\forms\\atoms\\label\\index.js",[],{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":58,"column":6,"nodeType":"284","endLine":58,"endColumn":8,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":2,"column":17,"nodeType":"288","messageId":"289","endLine":2,"endColumn":25},{"ruleId":"282","severity":1,"message":"290","line":20,"column":8,"nodeType":"284","endLine":20,"endColumn":19,"suggestions":"291"},{"ruleId":"286","severity":1,"message":"292","line":25,"column":19,"nodeType":"288","messageId":"289","endLine":25,"endColumn":27},{"ruleId":"286","severity":1,"message":"293","line":15,"column":12,"nodeType":"288","messageId":"289","endLine":15,"endColumn":20},{"ruleId":"286","severity":1,"message":"294","line":16,"column":12,"nodeType":"288","messageId":"289","endLine":16,"endColumn":17},{"ruleId":"282","severity":1,"message":"295","line":26,"column":8,"nodeType":"284","endLine":26,"endColumn":10,"suggestions":"296"},{"ruleId":"282","severity":1,"message":"297","line":30,"column":8,"nodeType":"284","endLine":30,"endColumn":17,"suggestions":"298"},{"ruleId":"282","severity":1,"message":"299","line":34,"column":8,"nodeType":"284","endLine":34,"endColumn":17,"suggestions":"300"},{"ruleId":"282","severity":1,"message":"301","line":23,"column":7,"nodeType":"284","endLine":23,"endColumn":9,"suggestions":"302"},{"ruleId":"286","severity":1,"message":"303","line":15,"column":13,"nodeType":"288","messageId":"289","endLine":15,"endColumn":21},{"ruleId":"286","severity":1,"message":"304","line":15,"column":23,"nodeType":"288","messageId":"289","endLine":15,"endColumn":35},{"ruleId":"286","severity":1,"message":"305","line":15,"column":37,"nodeType":"288","messageId":"289","endLine":15,"endColumn":45},{"ruleId":"286","severity":1,"message":"306","line":10,"column":19,"nodeType":"288","messageId":"289","endLine":10,"endColumn":26},{"ruleId":"286","severity":1,"message":"292","line":14,"column":19,"nodeType":"288","messageId":"289","endLine":14,"endColumn":27},{"ruleId":"286","severity":1,"message":"307","line":4,"column":22,"nodeType":"288","messageId":"289","endLine":4,"endColumn":34},{"ruleId":"286","severity":1,"message":"292","line":18,"column":19,"nodeType":"288","messageId":"289","endLine":18,"endColumn":27},{"ruleId":"282","severity":1,"message":"308","line":36,"column":8,"nodeType":"284","endLine":36,"endColumn":19,"suggestions":"309"},{"ruleId":"282","severity":1,"message":"310","line":27,"column":8,"nodeType":"284","endLine":27,"endColumn":19,"suggestions":"311"},{"ruleId":"286","severity":1,"message":"292","line":47,"column":19,"nodeType":"288","messageId":"289","endLine":47,"endColumn":27},{"ruleId":"286","severity":1,"message":"312","line":19,"column":19,"nodeType":"288","messageId":"289","endLine":19,"endColumn":25},{"ruleId":"282","severity":1,"message":"313","line":31,"column":8,"nodeType":"284","endLine":31,"endColumn":19,"suggestions":"314"},{"ruleId":"282","severity":1,"message":"315","line":35,"column":8,"nodeType":"284","endLine":35,"endColumn":10,"suggestions":"316"},{"ruleId":"286","severity":1,"message":"292","line":73,"column":19,"nodeType":"288","messageId":"289","endLine":73,"endColumn":27},{"ruleId":"317","severity":1,"message":"318","line":115,"column":25,"nodeType":"319","endLine":115,"endColumn":55},{"ruleId":"320","severity":1,"message":"321","line":72,"column":62,"nodeType":"322","messageId":"323","endLine":72,"endColumn":63,"suggestions":"324"},{"ruleId":"286","severity":1,"message":"292","line":17,"column":19,"nodeType":"288","messageId":"289","endLine":17,"endColumn":27},{"ruleId":"286","severity":1,"message":"325","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"287","line":1,"column":27,"nodeType":"288","messageId":"289","endLine":1,"endColumn":35},{"ruleId":"286","severity":1,"message":"292","line":16,"column":19,"nodeType":"288","messageId":"289","endLine":16,"endColumn":27},{"ruleId":"282","severity":1,"message":"326","line":23,"column":8,"nodeType":"284","endLine":23,"endColumn":25,"suggestions":"327"},{"ruleId":"282","severity":1,"message":"328","line":26,"column":8,"nodeType":"284","endLine":26,"endColumn":16,"suggestions":"329"},{"ruleId":"286","severity":1,"message":"292","line":21,"column":19,"nodeType":"288","messageId":"289","endLine":21,"endColumn":27},{"ruleId":"286","severity":1,"message":"330","line":2,"column":36,"nodeType":"288","messageId":"289","endLine":2,"endColumn":45},{"ruleId":"286","severity":1,"message":"331","line":3,"column":17,"nodeType":"288","messageId":"289","endLine":3,"endColumn":29},{"ruleId":"286","severity":1,"message":"287","line":5,"column":9,"nodeType":"288","messageId":"289","endLine":5,"endColumn":17},{"ruleId":"286","severity":1,"message":"292","line":23,"column":19,"nodeType":"288","messageId":"289","endLine":23,"endColumn":27},{"ruleId":"286","severity":1,"message":"292","line":23,"column":19,"nodeType":"288","messageId":"289","endLine":23,"endColumn":27},{"ruleId":"286","severity":1,"message":"292","line":22,"column":19,"nodeType":"288","messageId":"289","endLine":22,"endColumn":27},{"ruleId":"286","severity":1,"message":"287","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":18},{"ruleId":"286","severity":1,"message":"332","line":11,"column":12,"nodeType":"288","messageId":"289","endLine":11,"endColumn":14},{"ruleId":"286","severity":1,"message":"292","line":22,"column":19,"nodeType":"288","messageId":"289","endLine":22,"endColumn":27},{"ruleId":"286","severity":1,"message":"333","line":35,"column":13,"nodeType":"288","messageId":"289","endLine":35,"endColumn":19},{"ruleId":"286","severity":1,"message":"312","line":54,"column":19,"nodeType":"288","messageId":"289","endLine":54,"endColumn":25},{"ruleId":"286","severity":1,"message":"331","line":3,"column":17,"nodeType":"288","messageId":"289","endLine":3,"endColumn":29},{"ruleId":"286","severity":1,"message":"292","line":19,"column":19,"nodeType":"288","messageId":"289","endLine":19,"endColumn":27},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["336"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["337"],"'response' is assigned a value but never used.","'thoughts' is assigned a value but never used.","'works' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllPosts', 'getAllThoughts', and 'getProject'. Either include them or remove the dependency array.",["338"],"React Hook useEffect has a missing dependency: 'getAllThoughts'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has a missing dependency: 'getAllPosts'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["341"],"'Register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'useAuthState' is defined but never used.","React Hook useEffect has a missing dependency: 'privateView'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'getThought'. Either include it or remove the dependency array.",["343"],"'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fileName' and 'getWork'. Either include them or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'fileName'. Either include it or remove the dependency array.",["345"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["346","347"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has a missing dependency: 'setAddPost'. Either include it or remove the dependency array. If 'setAddPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["349"],"'SelectBox' is defined but never used.","'SelectOption' is defined but never used.","'id' is assigned a value but never used.","'reader' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"messageId":"370","fix":"371","desc":"372"},{"messageId":"373","fix":"374","desc":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},"Update the dependencies array to be: [authState]",{"range":"380","text":"381"},"Update the dependencies array to be: [getUser, isUpdated]",{"range":"382","text":"383"},"Update the dependencies array to be: [getAllPosts, getAllThoughts, getProject]",{"range":"384","text":"385"},"Update the dependencies array to be: [addPost, getAllThoughts]",{"range":"386","text":"387"},"Update the dependencies array to be: [addPost, getAllPosts]",{"range":"388","text":"389"},"Update the dependencies array to be: [getPost]",{"range":"390","text":"391"},"Update the dependencies array to be: [privateView, setAccess]",{"range":"392","text":"393"},"Update the dependencies array to be: [getThought, isUpdated]",{"range":"394","text":"395"},"Update the dependencies array to be: [fileName, getWork, isUpdated]",{"range":"396","text":"397"},"Update the dependencies array to be: [fileName]",{"range":"398","text":"399"},"removeEscape",{"range":"400","text":"401"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"402","text":"403"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [history, isAuthenticated]",{"range":"404","text":"405"},"Update the dependencies array to be: [cancel, setAddPost]",{"range":"406","text":"407"},[1440,1442],"[authState]",[726,737],"[getUser, isUpdated]",[1041,1043],"[getAllPosts, getAllThoughts, getProject]",[1105,1114],"[addPost, getAllThoughts]",[1173,1182],"[addPost, getAllPosts]",[661,663],"[getPost]",[1293,1304],"[privateView, setAccess]",[903,914],"[getThought, isUpdated]",[1075,1086],"[fileName, getWork, isUpdated]",[1151,1153],"[fileName]",[3328,3329],"",[3328,3328],"\\",[908,925],"[history, isAuthenticated]",[796,804],"[cancel, setAddPost]"]